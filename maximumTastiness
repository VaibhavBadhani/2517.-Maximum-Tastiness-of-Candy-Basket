class Solution {
    public boolean isposs(int[] price, int k,int mid)
    {
        int count=1;
        int last = price[0];
        for(int i =0;i< price.length;i++)
        {
            if(price[i]-last>=mid)
            {
                count++;
                if(count==k){ return true; }
                last= price[i];
            }
        }
                    return false;

    }
    public int maximumTastiness(int[] price, int k) {
        Arrays.sort(price);
        int s =0;
        int maxi=-1;
       int e= price[price.length-1];
        int mid  = s+(e-s)/2;
        int ans =-1;
        while(s<=e)
        {
            if(isposs(price,k,mid))
            {
                ans = mid;
                s=mid+1;
            }
            else
            {
                e=mid-1;
            }
            mid  = s+(e-s)/2;
        }
        return ans;
    }
}
